float x=0;
float y=0;
int i=0;
float preX=0;
float preY=0;

float x2=0;
float y2=0;
int j=0;
float preX2=0;
float preY2=0;

float x3=0;
float y3=0;
int k=0;
float preX3=0;
float preY3=0;

float x4=0;
float y4=0;
int m=0;
float preX4=0;
float preY4=0;

float x5=0;
float y5=0;
int n=0;
float preX5=0;
float preY5=0;


float[] emb8;
float[] emb16;
float[] emb32;
float[] emb64;
float[] emb100;


void setup()
{
  frameRate(30);
  size(1500,2500);
  background(255);
  
  emb8 = new float[50];
  emb16 = new float[50];
  emb32 = new float[50];
  emb64 = new float[50];
  emb100 = new float[50];
    
    emb8[0]=  376;
emb8[1]=  264;
emb8[2]= 188;
emb8[3]=  146;
emb8[4]= 125;
emb8[5]= 114;
emb8[6]= 106;
emb8[7]= 101;
emb8[8]= 96;
emb8[9]= 92;
emb8[10]= 90;
emb8[11]= 91;
emb8[12]= 89;
emb8[13]= 89;
emb8[14]=  90;
emb8[15]= 88;
emb8[16]= 88;
emb8[17]= 87;
emb8[18]= 87;
emb8[19]= 87;
emb8[20]= 86;
emb8[21]= 88;
emb8[22]= 86;
emb8[23]= 87;
emb8[24]= 87;
emb8[25]= 86;
emb8[26]= 86;
emb8[27]= 88;
emb8[28]= 86;
emb8[29]= 86;
emb8[30]= 86;
emb8[31]= 86;
emb8[32]= 86;
emb8[33]= 86;
emb8[34]= 88;
emb8[35]= 87;
emb8[36]= 86;
emb8[37]= 86;
emb8[38]= 86;
emb8[39]= 86;
emb8[40]= 86;
emb8[41]= 87;
emb8[42]= 86;
emb8[43]= 86;
emb8[44]= 86;
emb8[45]= 87;
emb8[46]= 86;
emb8[47]= 87;
emb8[48]= 86;
emb8[49]= 87;
  
  emb32[0]=338;
emb32[1]=213;
emb32[2]=150;
emb32[3]=122;
emb32[4]=106;
emb32[5]=95;
emb32[6]=87;
emb32[7]=81;
emb32[8]=75;
emb32[9]=72;
emb32[10]=69;
emb32[11]=69;
emb32[12]=69;
emb32[13]=68;
emb32[14]=68;
emb32[15]=68;
emb32[16]=69;
emb32[17]=68;
emb32[18]=67;
emb32[19]=67;
emb32[20]=67;
emb32[21]=67;
emb32[22]=67;
emb32[23]=66;
emb32[24]=67;
emb32[25]=67;
emb32[26]=66;
emb32[27]=66;
emb32[28]=66;
emb32[29]=67;
emb32[30]=67;
emb32[31]=67;
emb32[32]=66;
emb32[33]=66;
emb32[34]=66;
emb32[35]=67;
emb32[36]=67;
emb32[37]=66;
emb32[38]=67;
emb32[39]=66;
emb32[40]=66;
emb32[41]=66;
emb32[42]=66;
emb32[43]=67;
emb32[44]=67;
emb32[45]=66;
emb32[46]=67;
emb32[47]=67;
emb32[48]=66;
emb32[49]=67; 

emb16[0]=329;
emb16[1]=207;
emb16[2]=146;
emb16[3]=120;
emb16[4]=107;
emb16[5]=99;
emb16[6]=93;
emb16[7]=87;
emb16[8]=84;
emb16[9]=79;
emb16[10]=77;
emb16[11]=77;
emb16[12]=77;
emb16[13]=76;
emb16[14]=76;
emb16[15]=76;
emb16[16]=76;
emb16[17]=75;
emb16[18]=74;
emb16[19]=75;
emb16[20]=74;
emb16[21]=74;
emb16[22]=74;
emb16[23]=74;
emb16[24]=74;
emb16[25]=74;
emb16[26]=74;
emb16[27]=74;
emb16[28]=74;
emb16[29]=74;
emb16[30]=74;
emb16[31]=74;
emb16[32]=74;
emb16[33]=74;
emb16[34]=74;
emb16[35]=74;
emb16[36]=74;
emb16[37]=74;
emb16[38]=74;
emb16[39]=74;
emb16[40]=74;
emb16[41]=74;
emb16[42]=74;
emb16[43]=74;
emb16[44]=74;
emb16[45]=74;
emb16[46]=74;
emb16[47]=75;
emb16[48]=73;
emb16[49]=74; 

emb64[0]=311;
emb64[1]=182;
emb64[2]=134;
emb64[3]=111;
emb64[4]=97;
emb64[5]=88;
emb64[6]=80;
emb64[7]=75;
emb64[8]=70;
emb64[9]=67;
emb64[10]=65;
emb64[11]=65;
emb64[12]=64;
emb64[13]=64;
emb64[14]=64;
emb64[15]=64;
emb64[16]=63;
emb64[17]=63;
emb64[18]=63;
emb64[19]=63;
emb64[20]=63;
emb64[21]=63;
emb64[22]=62;
emb64[23]=62;
emb64[24]=63;
emb64[25]=63;
emb64[26]=63;
emb64[27]=62;
emb64[28]=63;
emb64[29]=62;
emb64[30]=63;
emb64[31]=62;
emb64[32]=62;
emb64[33]=62;
emb64[34]=62;
emb64[35]=62;
emb64[36]=62;
emb64[37]=62;
emb64[38]=62;
emb64[39]=63;
emb64[40]=63;
emb64[41]=62;
emb64[42]=62;
emb64[43]=62;
emb64[44]=62;
emb64[45]=63;
emb64[46]=63;
emb64[47]=62;
emb64[48]=63;
emb64[49]=63;


emb100[0]=297;
emb100[1]=188;
emb100[2]=142;
emb100[3]=116;
emb100[4]=104;
emb100[5]=92;
emb100[6]=84;
emb100[7]=79;
emb100[8]=75;
emb100[9]=71;
emb100[10]=68;
emb100[11]=68;
emb100[12]=68;
emb100[13]=68;
emb100[14]=67;
emb100[15]=67;
emb100[16]=67;
emb100[17]=67;
emb100[18]=67;
emb100[19]=66;
emb100[20]=66;
emb100[21]=66;
emb100[22]=66;
emb100[23]=66;
emb100[24]=66;
emb100[25]=65;
emb100[26]=66;
emb100[27]=66;
emb100[28]=65;
emb100[29]=66;
emb100[30]=66;
emb100[31]=66;
emb100[32]=65;
emb100[33]=65;
emb100[34]=65;
emb100[35]=65;
emb100[36]=65;
emb100[37]=65;
emb100[38]=65;
emb100[39]=65;
emb100[40]=65;
emb100[41]=66;
emb100[42]=66;
emb100[43]=66;
emb100[44]=66;
emb100[45]=65;
emb100[46]=66;
emb100[47]=66;
emb100[48]=65;
emb100[49]=66;
}

void draw()
{
  x = (i+1)*20;
  y = emb8[i+1]*4; 

  preX = i*20;
  preY = emb8[i]*4; 
  strokeWeight(2);
  stroke(159,201,60);
  line(preX,preY,x,y);

  preX = i*20;
  preY = emb8[i]*4;
  /*
  strokeWeight(2);
  stroke(0,0,0);
  point(x,y);*/
  if(i<48){
    i++;}
    
    //--------------------------------------------
    
    
    x2 = (j+1)*20;
  y2 = emb16[j+1]*4; 

  preX2 = j*20;
  preY2 = emb16[j]*4; 
  strokeWeight(2);
  stroke(61,183,204);
  line(preX2,preY2,x2,y2);

  preX2 = j*20;
  preY2 = emb16[j]*4;
  /*
  strokeWeight(2);
  stroke(0,0,0);
  point(x,y);*/
  if(j<48){
    j++;}
    
    //--------------------------------------------
    
    
    x3 = (k+1)*20;
  y3 = emb32[k+1]*4; 

  preX3 = k*20;
  preY3 = emb32[k]*4; 
  strokeWeight(2);
  stroke(70,65,217);
  line(preX3,preY3,x3,y3);

  preX3 = k*20;
  preY3 = emb32[k]*4;
  /*
  strokeWeight(2);
  stroke(0,0,0);
  point(x,y);*/
  if(k<48){
    k++;}
    
    
    //--------------------------------------------
    
    
    x4 = (m+1)*20;
  y4 = emb64[m+1]*4; 

  preX4 = m*20;
  preY4 = emb64[m]*4; 
  strokeWeight(2);
  stroke(153,0,133);
  line(preX4,preY4,x4,y4);

  preX4 = m*20;
  preY4 = emb64[m]*4;
  /*
  strokeWeight(2);
  stroke(0,0,0);
  point(x,y);*/
  if(m<48){
    m++;}
    
    
    //--------------------------------------------
    
    
    x5 = (n+1)*20;
  y5 = emb100[n+1]*4; 

  preX5 = n*20;
  preY5 = emb100[n]*4; 
  strokeWeight(2);
  stroke(189,92,36);
  line(preX5,preY5,x5,y5);

  preX5 = n*20;
  preY5 = emb100[n]*4;
  /*
  strokeWeight(2);
  stroke(0,0,0);
  point(x,y);*/
  if(n<48){
    n++;}
    
    
    
    
    
    
    
}








